import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

public record Card(Suit suit, String face, int rank) {
    public enum Suit {
        CLUB, DIAMOND, HEART, SPADE;
        public char getImg() {
            return (new char[] {9827, 9830, 9829, 9824})[this.ordinal()];
        }
    }

    @Override
    public String toString() {
        int index = face.equals("10") ? 2 : 1;
        String faceString = face.substring(0, index);
        return "%s%c(%d)".formatted(faceString, suit.getImg(), rank);
    }

    public static Card getNumericCard(Suit suit, int num) {
        if (num > 1 && num < 11) return new Card(suit, String.valueOf(num), num-2);
        System.out.println("Invalid Numeric card selected!");
        return null;
    }

    public static Card getFaceCard(Suit suit, char abv) {
        int charIndex = "JQKA".indexOf(abv);
        if (charIndex > -1) return new Card(suit, "" + abv, charIndex+9);
        System.out.println("Invalid Face card selected!");
        return null;
    }

    public static List<Card> getStandardDeck() {
        List<Card> deck = new ArrayList<>(52);
        for (Suit s : Suit.values()) {
            for (int i = 2; i <= 10; ++i) deck.add(getNumericCard(s, i));
            for (char c : new char[] {'J', 'Q', 'K', 'A'}) deck.add(getFaceCard(s, c));
        }
        return deck;
    }

    public static void printDeck(List<Card> deck, String description, int rows) {
        if (rows > 52) return;
        if (description != null) System.out.println(description);

        int cardsInRow = deck.size()/rows;
        for (int i = 0; i < rows; ++i) {
            int startIndex = i*cardsInRow;
            int endIndex = startIndex + cardsInRow;
            deck.subList(startIndex, endIndex).forEach(c -> System.out.print(c + " "));
            System.out.println();
        }
    }

    public static void printDeck(List<Card> deck) {
        printDeck(deck, "Current Deck", 4);
    }
}
