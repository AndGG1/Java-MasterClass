import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Stream;
 
public class Main {
    
    public static void main(String[] args) throws InterruptedException {
        
        String header = """
                Student Id, Country Code, Enrolled Year, Age, Gender,\
                Experienced, Course Code, Engagement Month, Engagement Year,\
                Engagement Type
                """;
        
        Course jmc = new Course("JMC", "Java Masterclass");
        Course pyc = new Course("PYC", "Python Masterclass");
        List<Student> students = Stream
                .generate(() -> Student.getRandomStudent(jmc, pyc))
                .limit(1000)
                .toList();
        
        try {
            List<String> records = new ArrayList<>();
            Files.newBufferedWriter(Path.of("Files/Sm"), StandardOpenOption.TRUNCATE_EXISTING);
            for (Student student : students) {
                records.addAll(student.getEngagementRecords());
                writeToFile(student.toJSON(), "Files/Sm");
                writeToFile2(student.toJSON(), "Files/Smd");
                records.clear();
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
    
    private static void writeToFile(String text, String path) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(path, true))) { // 'true' enables append mode
            
            writer.write(text.replace("[", "{").replace("]", "}"));
            writer.newLine(); // Ensures the text is on a new line
            
        } catch (IOException e) {
            System.out.println("Jumping over this one... Hold on a sec.");
            try {
                Thread.sleep(2000); // This isn't generally needed for IOException, but kept as per your example
            } catch (InterruptedException ie) {
                Thread.currentThread().interrupt(); // Restore interrupted status
            }
        }
    }
    
    private static void writeToFile2(String text, String path) {
        try (PrintWriter writer = new PrintWriter(new FileWriter(path, true))) {
            writer.println(text); // This writes the text followed by a newline
        } catch (IOException e) {
            System.out.println("Jumping over this one... Hold on a sec.");
            try {
                Thread.sleep(2000); // This isn't generally needed for IOException, but kept as per your example
            } catch (InterruptedException ie) {
                Thread.currentThread().interrupt(); // Restore interrupted status
            }
        }
    }
}
 
