Bank_Account class:



 public final class BankAccount {
    private enum Type {CHECKING, SAVINGS};
    private final Type type;
    private final int balance;
 
    public BankAccount(String type, int balance) {
        this.balance = balance;
        this.type = Type.valueOf(type.toUpperCase());
    }
 
    public BankAccount() {
        this(Type.SAVINGS.toString(), 0);
    }
 
    public Type getType() {
        return type;
    }
 
    public int getBalance() {
        return balance;
    }
 
    @Override
    public String toString() {
        return "BankAccount{" +
                "type=" + type +
                ", balance=" + balance +
                '}';
    }
}


Bank_Customer class:



import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;
 
public final class BankCustomer {
    private final String name;
    private final int id;
    private List<BankAccount> accounts;
 
    public BankCustomer(String name, List<BankAccount> accounts) {
        this.name = name;
        this.id = new Random().nextInt(10_000);
 
        boolean bool = false;
        try {
            accounts.add(null);
        } catch (UnsupportedOperationException e) {
            bool = true;
        }
 
        if (bool) {
            this.accounts = accounts;
        } else this.accounts = accounts == null ? Collections.unmodifiableList(accounts) : List.copyOf(accounts);
    }
 
    public BankCustomer(String name) {
        this (name, null);
    }
 
    public String getName() {
        return name;
    }
 
    public int getId() {
        return id;
    }
 
    public List<BankAccount> getAccounts() {
        return accounts == null ? new ArrayList<>() : List.copyOf(accounts);
    }
 
    protected void addAccount(BankAccount account) {
        for (var acc : accounts) {
            if (acc == account) {
                return;
            }
        }
        accounts.add(account);
    }
 
    @Override
    public String toString() {
        return "BankCustomer{" +
                "name='" + name + '\'' +
                ", id=" + id +
                ", accounts=" + accounts +
                '}';
    }
}


Main class:



import java.util.ArrayList;
import java.util.List;
 
public class Main {
 
    public static void main(String[] args) {
        BankCustomer customer1 = new BankCustomer("Andrew", List.of(new BankAccount("Savings", 20_000),
                new BankAccount("Savings", 310_000)));
 
        //Test 1 - change the accounts by changing another list that referees to the original list(at least tries to)
        List<BankAccount> copyList = customer1.getAccounts() == null ? new ArrayList<>() : new ArrayList<>(customer1.getAccounts());
        copyList.add(new BankAccount("Savings", 100_000));
        System.out.println(copyList + " - copy");
        System.out.println(customer1.getAccounts() + " - original");
 
        //Test 2 - Access data and try to change it - didn't implement it because of the errors, you can try it yourself
        /*
                                     ...code...
         */
    }
}


Rich_Bank_Customer class:



// Throws exception
//public class RichBankCustomer extends BankCustomer {}
